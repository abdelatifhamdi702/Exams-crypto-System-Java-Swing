/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Forms;

import entities.Candidat;
import java.awt.Color;
import java.awt.Font;
import java.awt.HeadlessException;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JTable;
import javax.swing.filechooser.FileNameExtensionFilter;
import jxl.Sheet;
import jxl.Workbook;
import jxl.read.biff.BiffException;

/**
 *
 * @author Abdelatif Hamdi
 */
public class cryptForm extends javax.swing.JFrame {

    /**
     * Creates new form cryptForm
     */
    public cryptForm() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel5 = new javax.swing.JLabel();
        jMyBottom1 = new controls.JMyBottom();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabCrypt = new javax.swing.JTable();
        jMyBottom3 = new controls.JMyBottom();
        jMyBottom4 = new controls.JMyBottom();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Traditional Arabic", 1, 48)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(70, 130, 180));
        jLabel5.setText("التشفير");

        jMyBottom1.setText("رفع قائمة المرشحين و توليد الشيفرات");
        jMyBottom1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMyBottom1ActionPerformed(evt);
            }
        });

        tabCrypt.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "الرقم", "الإسم", "اللقب", "تاريخ الميلاد", "التخصص", "الشفرة"
            }
        ));
        tabCrypt.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jScrollPane1.setViewportView(tabCrypt);

        jMyBottom3.setText("تنزيل الشفرة F1 ");
        jMyBottom3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMyBottom3ActionPerformed(evt);
            }
        });

        jMyBottom4.setText("فك التشفير + النتائج");
        jMyBottom4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMyBottom4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 736, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(324, 324, 324)
                        .addComponent(jLabel5))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(271, 271, 271)
                        .addComponent(jMyBottom1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(134, 134, 134)
                        .addComponent(jMyBottom4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(123, 123, 123)
                        .addComponent(jMyBottom3, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jMyBottom3, jMyBottom4});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jMyBottom1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 255, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jMyBottom4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jMyBottom3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private String[] getCells(String enrg){
String cells[]=new String[18];
int j=0;
for(int k=0;k<18;k++){
cells[k]="";
while(j<enrg.length()){
if (enrg.charAt(j)==';'){
j++; break;
} else{
cells[k]+=enrg.charAt(j); j++;
}}}
return cells;}
Candidat c = new Candidat();
int charToInt(char symbol)
	{
		return symbol % 48;
	}

String generateId(int id) {
        String finalResult = "";
        String alphabet = "AZERTYUIOPQSDFGHJKLMWXCVBN";
        String idString = String.valueOf(id);
        int size = idString.length() - 1;

        for (int i = size; i >= 0; i = i - 2) {

            int numberMult10 = 0;
            if (i != 0)
                numberMult10 = charToInt(idString.charAt(i - 1)) * 10;
            int number = charToInt(idString.charAt(i));
            System.out.println();
            int result = numberMult10 + number;
            String firstResult = "" + alphabet.charAt(result % 26) + result / 26;

            finalResult += firstResult;

        }
        return finalResult;

    }
    private void jMyBottom1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMyBottom1ActionPerformed
try{
    JFileChooser jfc = new JFileChooser();
int test = jfc.showOpenDialog(null);
if(test == JFileChooser.APPROVE_OPTION)
{
File exf = jfc.getSelectedFile();
            SimpleDateFormat sf = new SimpleDateFormat("yyyy-MM-dd");
    SimpleDateFormat sf2 = new SimpleDateFormat("dd/MM/yyyy");
if (".csv".equals(Tools.Tools.getFileExtension(exf))){
try {
        Scanner inputStream = new Scanner(exf);
        while (inputStream.hasNext()){
            String data = inputStream.nextLine();
            String cells[] = getCells(data);
            String insert ="insert into candidat values("
                +cells[0]+",'"+cells[1]+"','"+cells[2]+"','"+String.valueOf(sf.format(sf2.parse(cells[3])))+"','"+
        cells[4]+"','"+generateId(Integer.parseInt(cells[0]))+"')";
        db.go.RunNonQuery(insert);
        }
        inputStream.close();

    } catch (FileNotFoundException e) {
        // TODO Auto-generated catch block
        e.printStackTrace();
    }
    
}else if (".xls".equals(Tools.Tools.getFileExtension(exf))){
    Workbook wb = Workbook.getWorkbook(exf);
    Sheet s = wb.getSheet(0);
    int Rows = s.getRows(); 
for (int n = 0 ;n<Rows;n++){
String insert ="insert into candidat values("
                +s.getCell(0, n).getContents()+",'"+s.getCell(1, n).getContents()+"','"+s.getCell(2, n).getContents()+"','"+String.valueOf(sf.format(sf2.parse(s.getCell(3, n).getContents())))+"','"
        +s.getCell(4, n).getContents()+"','"+generateId(Integer.parseInt(s.getCell(0, n).getContents()))+"')";
        db.go.RunNonQuery(insert);
}}
Tools.Tools.Message("Le fichier excle est importé avec succès");
c.getAllRows(tabCrypt);
}} catch (HeadlessException | IOException | IndexOutOfBoundsException | ParseException | BiffException ex){
            Tools.Tools.Message(ex);
}    }//GEN-LAST:event_jMyBottom1ActionPerformed

    
    private void jMyBottom3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMyBottom3ActionPerformed

 JFileChooser excelFileChooser = new JFileChooser();
            //Dialog box title
            excelFileChooser.setDialogTitle("Save As ..");
            //Filter only xls, xlsx, xlsm files
            FileNameExtensionFilter fnef = new FileNameExtensionFilter("Files", "xls", "xlsx", "xlsm");
            //Setting extension for selected file names
            excelFileChooser.setFileFilter(fnef);
            int chooser = excelFileChooser.showSaveDialog(null);
 if(chooser == JFileChooser.APPROVE_OPTION){
File x = excelFileChooser.getSelectedFile();

     try {
         Tools.Tools.writeToExcell2(tabCrypt, x.toPath());
     } catch (IOException ex) {
         Logger.getLogger(cryptForm.class.getName()).log(Level.SEVERE, null, ex);
     }
} 
    }//GEN-LAST:event_jMyBottom3ActionPerformed

    private void jMyBottom4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMyBottom4ActionPerformed
//this.dispose();
Tools.Tools.OpenForm(new Forms.decryptForm());
    }//GEN-LAST:event_jMyBottom4ActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
c.getAllRows(tabCrypt);
tabCrypt.getTableHeader().setReorderingAllowed(false);
        tabCrypt.getTableHeader().setFont(new Font("Tahoma",Font.BOLD,13));
tabCrypt.getTableHeader().setOpaque(false);
tabCrypt.getTableHeader().setBackground(new Color(32, 136, 203));
    }//GEN-LAST:event_formWindowOpened

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(cryptForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(cryptForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(cryptForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(cryptForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new cryptForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel5;
    private controls.JMyBottom jMyBottom1;
    private controls.JMyBottom jMyBottom3;
    private controls.JMyBottom jMyBottom4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabCrypt;
    // End of variables declaration//GEN-END:variables
}
